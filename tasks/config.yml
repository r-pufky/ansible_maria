---
###############################################################################
# MariaDB Config
###############################################################################
# Set database storage locations, backup script, backup service, and mariadb
# configs before starting service.
#
# Service needs to be running to manage database and database users.

- name: 'Config | enable backups'
  when: _maria_cfg_databases_backup_enable.raw
  block:
    # TODO(role): potential data management step here.
    - name: 'Config | enable backups | set backup directory'
      ansible.builtin.file:
        path: '{{ _maria_cfg_databases_backup_dir.raw }}'
        owner: '{{ _maria_srv_user.parsed }}'
        group: '{{ _maria_srv_group.parsed }}'
        mode: '0755'
        recurse: false
        state: 'directory'
      become: '{{ true if _maria_srv_user_data_manage_enable.raw else omit }}'
      become_user: '{{
          _maria_srv_user.raw
          if _maria_srv_user_data_manage_enable.raw else
          omit
        }}'

    - name: 'Config | enable backups | set backup script'
      ansible.builtin.template:
        src: 'maria_backup.j2'
        dest: '{{ _maria_cfg_databases_backup_dir.role }}'
        owner: 'root'
        group: 'root'
        mode: '0700'

    - name: 'Config | enable backups | create backup service'
      ansible.builtin.include_role:
        name: 'r_pufky.deb.systemd'
      vars:
        systemd_services:
          - name: 'maria_backup'
            state: 'present'
            drop_in: false
            unit:
              description: 'MariaDB backup service.'
              requires: ['maria_backup.timer']
            service:
              type: 'simple'
              exec_start: ['{{ _maria_cfg_databases_backup_dir.role }}']
            exec:
              user: 'root'
              group: 'root'
        systemd_timers:
          - name: 'maria_backup'
            state: 'present'
            drop_in: false
            unit:
              description: 'MariaDB backup service timer.'
            timer:
              unit: 'maria_backup.service'
              on_calendar: ['{{ _maria_cfg_databases_backup_schedule.raw }}']
            install:
              wanted_by: ['timers.target']

- name: 'Config | disable backups'
  when: not _maria_cfg_databases_backup_enable.raw
  block:
    - name: 'Config | disable backups | remove backup script'
      ansible.builtin.file:
        dest: '{{ _maria_cfg_databases_backup_dir.role }}'
        state: 'absent'

    - name: 'Config | disable backups | remove backup service'
      ansible.builtin.include_role:
        name: 'r_pufky.deb.systemd'
      vars:
        systemd_services:
          - name: 'maria_backup'
            state: 'absent'
            drop_in: false
        systemd_timers:
          - name: 'maria_backup'
            state: 'absent'
            drop_in: false

- name: 'Config | set mariadb certs'
  when: _maria_srv_certs_path.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _maria_srv_certs_path.raw }}'
    dest: '{{ _maria_srv_certs_path.parsed }}'
    owner: 'root'
    group: 'root'
    mode: '0600'
    directory_mode: '0755'
    force: true

- name: 'Config | remove mariadb certs'
  when: _maria_srv_certs_path.raw | length == 0
  ansible.builtin.file:
    dest: '{{ _maria_srv_certs_path.role }}'
    state: 'absent'

- name: 'Config | set encryption files'
  when: _maria_cfg_encryption_path.raw | length > 0
  ansible.builtin.copy:
    src: '{{ _maria_cfg_encryption_path.raw }}'
    dest: '{{ _maria_cfg_encryption_path.parsed }}'
    owner: '{{ _maria_srv_user.raw }}'
    group: 'root'
    mode: '0600'
    directory_mode: '0755'
    force: true

- name: 'Config | remove encryption files'
  when: _maria_cfg_encryption_path.raw | length == 0
  ansible.builtin.file:
    dest: '{{ _maria_cfg_encryption_path.role }}'
    state: 'absent'

- name: 'Config | set mariadb.cnf'
  ansible.builtin.template:
    src: 'mariadb.cnf.j2'
    dest: '/etc/mysql/mariadb.cnf'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Config | set 50-client.cnf'
  when: >
    _maria_cfg_client_all.raw | length > 0 or
    _maria_cfg_client_only.raw | length > 0
  ansible.builtin.template:
    src: 'client.cnf.j2'
    dest: '{{ _maria_cfg_client_all.role }}'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Config | remove 50-client.cnf'
  when: >
    _maria_cfg_client_all.raw | length == 0 and
    _maria_cfg_client_only.raw | length == 0
  ansible.builtin.file:
    path: '{{ _maria_cfg_client_all.role }}'
    state: 'absent'

- name: 'Config | set 50-mariadb-clients.cnf'
  when: >
    _maria_cfg_mariadb_client.raw | length > 0 or
    _maria_cfg_mariadb_upgrade.raw | length > 0 or
    _maria_cfg_mariadb_admin.raw | length > 0 or
    _maria_cfg_mariadb_binlog.raw | length > 0 or
    _maria_cfg_mariadb_check.raw | length > 0 or
    _maria_cfg_mariadb_dump.raw | length > 0 or
    _maria_cfg_mariadb_import.raw | length > 0 or
    _maria_cfg_mariadb_show.raw | length > 0 or
    _maria_cfg_mariadb_slap.raw | length > 0
  ansible.builtin.template:
    src: 'mariadb-clients.cnf.j2'
    dest: '{{ _maria_cfg_mariadb_client.role }}'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Config | remove 50-mariadb-clients.cnf'
  when: >
    _maria_cfg_mariadb_client.raw | length == 0 and
    _maria_cfg_mariadb_upgrade.raw | length == 0 and
    _maria_cfg_mariadb_admin.raw | length == 0 and
    _maria_cfg_mariadb_binlog.raw | length == 0 and
    _maria_cfg_mariadb_check.raw | length == 0 and
    _maria_cfg_mariadb_dump.raw | length == 0 and
    _maria_cfg_mariadb_import.raw | length == 0 and
    _maria_cfg_mariadb_show.raw | length == 0 and
    _maria_cfg_mariadb_slap.raw | length == 0
  ansible.builtin.file:
    path: '{{ _maria_cfg_mariadb_client.role }}'
    state: 'absent'

- name: 'Config | set 50-server.cnf'
  when: >
    _maria_cfg_server_server.raw | length > 0 or
    _maria_cfg_server_mariadb.raw | length > 0 or
    _maria_cfg_server_embedded.raw | length > 0
  ansible.builtin.template:
    src: 'server.cnf.j2'
    dest: '{{ _maria_cfg_server_server.role }}'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Config | remove 50-server.cnf'
  when: >
    _maria_cfg_server_server.raw | length > 0 and
    _maria_cfg_server_mariadb.raw | length > 0 and
    _maria_cfg_server_embedded.raw | length > 0
  ansible.builtin.file:
    path: '{{ _maria_cfg_server_server.role }}'
    state: 'absent'

- name: 'Config | set 60-galera.cnf'
  when: _maria_cfg_galera_config.raw | length > 0
  ansible.builtin.template:
    src: 'galera.cnf.j2'
    dest: '{{ _maria_cfg_galera_config.role }}'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Config | remove 60-galera.cnf'
  when: _maria_cfg_galera_config.raw | length == 0
  ansible.builtin.file:
    path: '{{ _maria_cfg_galera_config.role }}'
    state: 'absent'

- name: 'Config | set 90-extensions.cnf'
  when: _maria_cfg_extensions.raw | length > 0
  ansible.builtin.template:
    src: 'extensions.cnf.j2'
    dest: '{{ _maria_cfg_extensions.role }}'
    owner: 'root'
    group: 'root'
    mode: '0644'

- name: 'Config | remove 90-extensions.cnf'
  when: _maria_cfg_extensions.raw | length == 0
  ansible.builtin.file:
    path: '{{ _maria_cfg_extensions.role }}'
    state: 'absent'

- name: 'Config | initialize data directories'
  ansible.builtin.include_tasks: 'initialize.yml'
  vars:
    db_config: '{{ item }}'
  loop: '{{ _maria.dbs }}'
  loop_control:
    label: '{{ item.datadir | default("/var/lib/mysql") }}'

- name: 'Config | start services'
  ansible.builtin.systemd:
    name: '{{ item }}'
    enabled: true
    daemon_reload: true
    state: 'started'
  failed_when: false
  loop:
    - 'mariadb.service'
